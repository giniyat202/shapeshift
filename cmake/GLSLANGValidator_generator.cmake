get_filename_component(FIL_WE ${FIL} NAME_WE)
get_filename_component(FIL_EXT ${FIL} EXT)
string(REGEX REPLACE "\\." "" FIL_EXT ${FIL_EXT})
if(${FIL_EXT} STREQUAL "vert")
	set(TYPE "GL_VERTEX_SHADER")
elseif(${FIL_EXT} STREQUAL "frag")
	set(TYPE "GL_FRAGMENT_SHADER")
else()
	message(SEND_ERROR "Error: unknown shader type.")
endif()
set(HDR "${OUTPUT_DIR}/${FIL_WE}_${FIL_EXT}.h")
set(SRC "${OUTPUT_DIR}/${FIL_WE}_${FIL_EXT}.cpp")
execute_process(COMMAND "${GLSLANGVALIDATOR_EXECUTABLE}" -d "${FIL}" RESULT_VARIABLE RES OUTPUT_VARIABLE CMD_OUT)
if(NOT "${RES}" STREQUAL "0")
	string(REPLACE "\n" ";" ERRORS ${CMD_OUT})
	foreach(ERROR IN LISTS ERRORS)
		if (NOT "${ERROR}" STREQUAL "")
			message(SEND_ERROR "${ERROR}")
		endif()
	endforeach()
else()
	file(READ ${FIL} CONTENT HEX)
	string(REGEX REPLACE "(..)" "\\\\x\\1" CONTENT ${CONTENT})
	string(REGEX REPLACE "\\\\x0d" "" CONTENT ${CONTENT})
	file(WRITE ${HDR} "#ifndef _${FIL_WE}_${FIL_EXT}_INCLUDED\n")
	file(APPEND ${HDR} "#define _${FIL_WE}_${FIL_EXT}_INCLUDED\n")
	file(APPEND ${HDR} "#include <shader.h>\n")
	file(APPEND ${HDR} "extern Shader shader_${FIL_WE}_${FIL_EXT};\n")
	#file(APPEND ${HDR} "extern const char *_${FIL_WE}_${FIL_EXT}_source;\n")
	file(APPEND ${HDR} "#endif\n")
	file(WRITE ${SRC} "#include <${FIL_WE}_${FIL_EXT}.h>\n")
	file(APPEND ${SRC} "#include <GL/glew.h>\n")
	file(APPEND ${SRC} "Shader shader_${FIL_WE}_${FIL_EXT}(\"${CONTENT}\", false, ${TYPE});\n")
	#file(APPEND ${SRC} "const char *_${FIL_WE}_${FIL_EXT}_source = \"${CONTENT}\";\n")
endif()
